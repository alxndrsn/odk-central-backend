#!/bin/bash -eu
set -o pipefail

log() { echo "[test/db-partial-migrations/prepare] $*"; }

show_migrations() {
  echo TODO
  #tree lib/model/migrations # TODO reinstate
}

prerun="$1"
log "Requested for prerun: $prerun"

migrations_legacy=./lib/model/migrations/legacy
migrations_new=./lib/model/migrations

rmExceptFirst() {
  local skipCount="$1"
  local src="$2"
  find "$src" -maxdepth 1 -type f -name \*.js -printf '%p\n' |
      sort |
      tail -n +$((skipCount+1)) |
      xargs echo rm
}

log "Re-arranging migrations..."
case "$prerun" in
  none)
    echo rm "$migrations_new"/*
    echo rm "$migrations_legacy"/*
    ;;
  legacy-all)
    echo rm "$migrations_new"/*
    ;;
  legacy-first-*)
    echo rm "$migrations_new"/*
    rmExceptFirst "$(sed s/legacy-first-// <<<"$prerun")" "$migrations_legacy"
    ;;
  new-first-*-as-legacy)
    rmExceptFirst "$(sed s/new-first-\(.*\)-as-legacy/\1/ <<<"$prerun")" "$migrations_new"
    sed -E -i -e "s/db\.query/db.raw/" -- "$migrations_new"/*.js
    ;;
  *)
    log "!!!"
    log "!!! No rule found matching '$prerun'"
    log "!!!"
    exit 1
    ;;
esac
sed -i s/db\.query/db\.raw/ -- "$migrations_new"/*.js
exit # TODO remove this
log "Initial migrations structure:"
show_migrations

make migrations-legacy

log "Re-instating unrun migrations..."
# TODO

log "Final migrations structure:"
show_migrations

log "Completed OK."
